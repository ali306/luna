name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target universal-apple-darwin'
            sidecar-target: 'universal'
          - platform: 'ubuntu-22.04'
            args: '--target x86_64-unknown-linux-gnu'
            sidecar-target: 'linux'
          - platform: 'windows-latest'
            args: '--target x86_64-pc-windows-msvc'
            sidecar-target: 'windows'

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libespeak-dev espeak-data

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install frontend dependencies
        run: pnpm install

      - name: Install Python dependencies
        run: pip install -r requirements.txt

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build Python sidecar (Windows)
        if: matrix.platform == 'windows-latest'
        run: pnpm build:sidecar-windows

      - name: Build Python sidecar (Linux)
        if: matrix.platform == 'ubuntu-22.04'
        run: pnpm build:sidecar-linux

      - name: Build Python sidecar (macOS Intel)
        if: matrix.platform == 'macos-latest'
        run: pnpm build:sidecar-darwin-intel

      - name: Build Python sidecar (macOS ARM)
        if: matrix.platform == 'macos-latest'
        run: pnpm build:sidecar-darwin-arm

      - name: Build frontend
        run: pnpm build

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'Luna v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}